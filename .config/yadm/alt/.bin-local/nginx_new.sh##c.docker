#!/bin/bash
trap exit 1 INT

auth="# include /etc/nginx/conf.d/auth/auth.conf;"
resolver="# resolver 127.0.0.11 valid=30s;"

dir="$HOME/prod/nginx/conf.d"

echo "Specify internal address:"
internal="$(gum input --placeholder 'https://123.45.67.89:8080')"
echo " → $internal"

echo "Specify external address:"
external="$(gum input --placeholder 'service.example.com')"
echo "→ $external"

proxytype="$(gum choose 'Proxmox Server' 'External Service' 'Docker Container')"

gum confirm "HTTP Authentication?" && auth="include /etc/nginx/conf.d/auth/auth.conf;"

case "$proxytype" in
  "Proxmox Server")   fn="01-${external}.conf";;
  "External Service") fn="02-${external}.conf";;
  "Docker Container") fn="03-${external}.conf";resolver="resolver 127.0.0.11 valid=30s;";;
  *)                  exit 2;;
esac

[ -e $dir/$fn ] && echo "Config already exists." && exit 1

cat << EOF >> $dir/$fn
server {
  server_name ${external};
  listen 80;
  location / {
    return 301 https://\$host\$request_uri;
  }
}

server {
  listen 443 ssl;
  server_name ${external};
  ssl_certificate /etc/nginx/ssl/fullchain.pem;
  ssl_certificate_key /etc/nginx/ssl/privkey.pem;
  ${resolver}
  location / {
    ${auth}
    proxy_pass ${internal};
  }
}
EOF

gum confirm "Restart nginx container?" && docker-compose -f ~/prod/docker-compose.yaml restart nginx
